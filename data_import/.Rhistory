year <- y[length(y)]
year <- substring(year, 1, 4)
}
year
vector[g] <- year
g <- g + 1
}
vector
g <- 1
year <- strsplit(i, ', ')
year
y <- unlist(year)
y
g <- 1
year <- strsplit(i, ', ')
year
y <- unlist(year)
y <- y[length(y)]
y
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year
y <- unlist(year)
y <- y[length(y)]
y
if (str_length(y[length(y)]) > 4 || is.na(y[length(y)])) {
year <- y[length(y)]
year <- substring(year, 1, 4)
}
year
vector[g] <- year
g <- g + 1
}
vector
g <- 1
year <- strsplit(i, ', ')
year
g <- 1
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(y[length(y)]) > 4 || is.na(y[length(y)])) {
year <- y[length(y)]
year <- substring(year, 1, 4)
}
year
vector[g] <- year
g <- g + 1
}
vector
vector <- unlist(vector)
vector
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(y[length(y)]) > 4) {
year <- y[length(y)]
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
vector <- unlist(vector)
vector
g <- 1
year <- strsplit(i, ', ')
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
vector <- unlist(vector)
vector
dim(vector)
length(vector)
vector <- as.numeric(vector)
vector
vector
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
vector <- as.numeric(unlist(vector))
vector
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
release_date <- as.numeric(unlist(vector))
release_date
library('rvest')
library('RCurl')
library('XML')
library('stringr')
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
rank_data <- as.numeric(rank_data)
title_data <- webpage %>% html_nodes('.selection-film-item-meta__name') %>% html_text
head(title_data)
release_date <- webpage %>% html_nodes('.selection-film-item-meta__original-name') %>% html_text
release_date
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
release_date <- as.numeric(unlist(vector))
release_date
country_date <- webpage %>% html_nodes('.selection-film-item-meta__meta-additional-item') %>% html_text
country_date
ss <- strsplit(country_date, ', ')
ss
release_date
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/?sort=popularity&tab=all'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
rank_data <- as.numeric(rank_data)
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
rank_data <- as.numeric(rank_data)
title_data <- webpage %>% html_nodes('.selection-film-item-meta__name') %>% html_text
head(title_data)
release_date <- webpage %>% html_nodes('.selection-film-item-meta__original-name') %>% html_text
release_date
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
release_date <- as.numeric(unlist(vector))
release_date
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
rank_data <- as.numeric(rank_data)
title_data <- webpage %>% html_nodes('.selection-film-item-meta__name') %>% html_text
head(title_data)
library('rvest')
library('RCurl')
library('XML')
library('stringr')
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
country_date <- webpage %>% html_nodes('.selection-film-item-meta__meta-additional-item') %>% html_text
country_date
library('rvest')
library('RCurl')
library('XML')
library('stringr')
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
library('rvest')
library('RCurl')
library('XML')
library('stringr')
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
library('rvest')
library('RCurl')
library('XML')
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
rank_data <- webpage %>% html_nodes('.selection-film-item-poster__rating_negative') %>% html_text
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
release_date <- webpage %>% html_nodes('.selection-film-item-meta__original-name') %>% html_text
release_date
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
release_date <- as.numeric(unlist(vector))
release_date
release_date
release_date <- webpage %>% html_nodes('.selection-film-item-meta__original-name') %>% html_text
release_date
year <- strsplit(i, ', ')
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
fileURL <-'https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml'
xmlData <-getURL(fileURL)
parsedXML <-xmlParse(xmlData, useInternalNodes =T)
rootNode <-xmlRoot(parsedXML)
class(rootNode)
xmlName(rootNode)
webpage[1]
webpage[:]
webpage[]
webpage <- read_html(fileURL)
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
html_text
length(rank_data)
rank_data <- webpage %>% html_nodes('.selection-film-item-poster__rating_negative') %>% html_text
rank_data
release_date <- webpage %>% html_nodes('.selection-film-item-meta__original-name') %>% html_text
release_date
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
release_date_vector <- as.numeric(unlist(vector))
release_date_vector
library('rvest')
library('RCurl')
library('XML')
library('stringr')
fileURL <- 'https://www.kinopoisk.ru/lists/editorial/theme_dragon/'
webpage <- read_html(fileURL)
webpage
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
rank_data <- as.numeric(rank_data)
title_data <- webpage %>% html_nodes('.selection-film-item-meta__name') %>% html_text
head(title_data)
release_date <- webpage %>% html_nodes('.selection-film-item-meta__original-name') %>% html_text
release_date
g <- 1
for (i in release_date) {
year <- strsplit(i, ', ')
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
release_date_vector <- as.numeric(unlist(vector))
release_date_vector
length(release_date_vector)
country_date <- webpage %>% html_nodes('.selection-film-item-meta__meta-additional-item') %>% html_text
country_date
rank_data <- webpage %>% html_nodes('.selection-film-item-poster__rating_negative') %>% html_text
rank_data
rank_data <- webpage %>% html_nodes('.selection-film-item-poster__rating_negative') %>%
html_nodes('.selection-film-item-poster__rating_positive') %>% html_text
rank_data
rank_data <- webpage %>% html_nodes('.selection-film-item-poster__rating_negative', '.selection-film-item-poster__rating_positive') %>% html_text
rank_data <- webpage %>% html_nodes('.selection-film-item-poster__rating_negative .selection-film-item-poster__rating_positive') %>% html_text
rank_data
rank_data_negative <- webpage %>% html_nodes('.selection-film-item-poster__rating_negative') %>% html_text
rank_data_positive <- webpage %>% html_nodes('.selection-film-item-poster__rating_positive') %>% html_text
length(rank_data_negative)
length(rank_data_positive)
rank_data_negative <- webpage %>% html_nodes('.selection-film-item-poster__rating_negative') %>% html_text
rank_data_positive <- webpage %>% html_nodes('.selection-film-item-poster__rating_positive') %>% html_text
rank_data_neutral <- webpage %>% html_nodes('.selection-film-item-poster__rating_neutral') %>% html_text
length(rank_data_negative)
length(rank_data_positive)
length(rank_data_neutral)
as.character.factor(rank_data_negative)
rank_data_negative
append(rank_data_negative, rank_data_positive)
rank_all <- append(rank_all, rank_data_neutral)
rank_all <- append(rank_data_negative, rank_data_positive)
rank_all <- append(rank_all, rank_data_neutral)
rank_all
country_date
country_date[1]
head(release_date)
country <- strsplit(i, ', ')
country
for (i in country_date) {
country <- strsplit(i, ', ')
country
year <- unlist(year)
year <- year[length(year)]
if (str_length(year) > 4) {
year <- substring(year, 1, 4)
}
vector[g] <- year
g <- g + 1
}
country <- strsplit(i, ', ')
country
length(country_date)
country <- strsplit(country_date)
country <- strsplit(country_date[i], ', ')
country
length(country_date[1])
country_date[1]
if (!is.na(strsplit(country_date[i], ', '))) {
country <- strsplit(country_date[i], ', ')
}
country
#country <- strsplit(country_date[i], ', ')
country <- 0
if (!is.na(strsplit(country_date[i], ', '))) {
country <- strsplit(country_date[i], ', ')
}
#country <- strsplit(country_date[i], ', ')
country
if (!is.na(strsplit(country_date[i], ', '))) {
country <- strsplit(country_date[i], ', ')
}
i <- 3
if (!is.na(strsplit(country_date[i], ', '))) {
country <- strsplit(country_date[i], ', ')
}
#country <- strsplit(country_date[i], ', ')
country
#country <- strsplit(country_date[i], ', ')
country[1]
#country <- strsplit(country_date[i], ', ')
country <- unlist(country)
country
country[1]
i <- 1
g <- 1
while (i < length(country_date)) {
if (!is.na(strsplit(country_date[i], ', '))) {
country <- strsplit(country_date[i], ', ')
}
country <- unlist(country)
country <- country[1]
vector_country_date[g] <- country
i <- i + 2
g <- g + 1
}
vector_country_date <- []
i <- 1
vector_country_date <- rep(NA, length(country_date))
i <- 1
g <- 1
while (i < length(country_date)) {
if (!is.na(strsplit(country_date[i], ', '))) {
country <- strsplit(country_date[i], ', ')
}
country <- unlist(country)
country <- country[1]
vector_country_date[g] <- country
i <- i + 2
g <- g + 1
}
vector_country_date
vector_country_date <- rep(NA, length(country_date)/2)
i <- 1
g <- 1
while (i < length(country_date)) {
if (!is.na(strsplit(country_date[i], ', '))) {
country <- strsplit(country_date[i], ', ')
}
country <- unlist(country)
country <- country[1]
vector_country_date[g] <- country
i <- i + 2
g <- g + 1
}
vector_country_date
head(rank_all)
DF_movies <- data.frame(Rank = rank_data, Title = title_data,
Releas = release_date_vector, Metascore = rank_all,
Country = vector_country_date)
rank_all <- append(rank_all, NA)
head(rank_all)
length(head)
length(rank_all)
DF_movies <- data.frame(Rank = rank_data, Title = title_data,
Releas = release_date_vector, Metascore = rank_all,
Country = vector_country_date)
length(rank_all)
length(rank_data)
length(title_data)
length(release_date_vector)
length(rank_all)
length(vector_country_date)
rank_data <- webpage %>% html_nodes('.selection-film-item-position') %>% html_text
length(rank_data)
length(rank_data)
length(title_data)
length(release_date_vector)
length(rank_all)
length(vector_country_date)
DF_movies <- data.frame(Rank = rank_data, Title = title_data,
Releas = release_date_vector, Metascore = rank_all,
Country = vector_country_date)
str(DF_movies)
DF_movies
write.csv(DF_movies_short, file ='./DF_movies.csv', row.names = F)
write.csv(DF_movies, file ='./DF_movies.csv', row.names = F)
# Запись в .csv файл
write.csv(DF_movies, file ='./DF_movies.csv', row.names = T)
# Запись в .csv файл
write.csv(DF_movies, file ='./DF_movies.csv', row.names = F)
# Запись в .csv файл
write.csv(DF_movies, file ='./DF_movies.csv', row.names = F)
head(DF_movies)
# Создание таблицы
DF_movies <- data.frame(Rank = rank_data, Title = title_data,
Release = release_date_vector, Metascore = rank_all,
Country = vector_country_date)
head(DF_movies)
# Запись в .csv файл
write.csv(DF_movies, file ='./DF_movies.csv', row.names = F)
knitr::opts_chunk$set(echo = TRUE)
library('rvest')
library('RCurl')
library('XML')
library('stringr')
g <- g + 1
```{r, echo=FALSE, results="hold", comment="", message=FALSE, include=FALSE}
```{r, echo=FALSE, results="hold", comment=""}
write('...')
